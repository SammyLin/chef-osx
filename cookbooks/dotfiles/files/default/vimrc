"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Initial setup                                                               "
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let createVimDir=1
let vim_dir=expand('~/.vim')
if !isdirectory(vim_dir)
    echo "Creating ~/.vim/"
    echo ""
    silent !mkdir -p ~/.vim
    let createVimDir=0
endif

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Plugins                                                                     "
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Setting up Vundle - the vim plugin bundler
let installVundle=1
let vundle_readme=expand('~/.vim/bundle/vundle/README.md')
if !filereadable(vundle_readme)
    echo "Installing Vundle.."
    echo ""
    silent !mkdir -p ~/.vim/bundle
    silent !git clone https://github.com/gmarik/vundle ~/.vim/bundle/vundle
    " silent !vim +BundleInstall +qall
    let installVundle=0
endif

" Required settings for Vundle
filetype off
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
Bundle 'gmarik/vundle'

" Plugins
Bundle 'tpope/vim-fugitive'
Bundle 'kien/ctrlp.vim'
Bundle 'mileszs/ack.vim'
Bundle 'Lokaltog/vim-powerline'
Bundle 'scrooloose/nerdtree'
Bundle 'mattn/webapi-vim'
Bundle 'mattn/gist-vim'
Bundle 'anzaika/go.vim'
Bundle 'scrooloose/syntastic'
Bundle 'Townk/vim-autoclose'
Bundle 'tpope/vim-eunuch'
Bundle 'tpope/vim-rails'
Bundle 'tpope/vim-surround'
Bundle 'tpope/vim-rvm'
Bundle 'tpope/vim-commentary'

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" General viewing                                                             "
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" fix backspace
set backspace=start,eol,indent

" make it prettier
set background=dark

" makes sure the status line displays automatically
set laststatus=2

" setup powerline symbols
let g:Powerline_symbols = 'unicode'

" turn on syntax highlighting
syntax on

" set terminal title to file name
set title

" Set to auto read when a file is changed from the outside
set autoread

" Set 7 lines to the cursor - when moving vertically using j/k
set so=7

" Ignore case when searching
set ignorecase

" Highlight search results
set hlsearch

" Automatically display line number
set number

" faster find for ctl-p
let g:ctrlp_user_command = 'find %s -type f'

" set ignore directories for ctl-p
set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*/.git/*,*/.hg/*,*/.svn/*

" Relative number toggling
function! NumberToggle()
  if(&relativenumber == 1)
    set number
  else
    set relativenumber
  endif
endfunc

nnoremap <C-n> :call NumberToggle()<cr>

" Show and clear all extraneous whitespace automatically
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/
autocmd BufWinLeave * call clearmatches()
autocmd BufWritePre * :%s/\s\+$//e

" for Smarty
au BufRead,BufNewFile *.tpl set filetype=smarty

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" General code writing                                                        "
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" fold based on indent
set foldmethod=indent

" deepest fold is 10 levels
set foldnestmax=10

" dont fold by default
set nofoldenable

" set the foldlevel
" set foldlevel=1

" PHP auto-complete
autocmd FileType php set omnifunc=phpcomplete#CompletePHP

" set filetype for go files
au BufRead,BufNewFile *.go set filetype=go

" set commentary comment types
autocmd FileType python set commentstring=#\ %s

" set permanent undo files
set undofile

" maximum number of changes that can be undone
set undolevels=1000

" maximum number lines to save for undo on a buffer reload
set undoreload=10000

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Key maps                                                                    "
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Turning off the <F1> help
nmap <F1> <nop>

" toggle NERDTree
nmap <F1> :NERDTreeToggle<CR>

" switch between NERDTree and the open file
map <F2> <C-w><C-w>

" tab left
map <F3> gT

" tab right
map <F4> gt

" toggle line numbers
map <F5> :set number!<CR> :set foldcolumn=0<CR>

" word wrap
map <F6> gwap

" turn on spell checking
map <F7> :set paste!<CR>

" run the file
au BufEnter,BufNew *.php map <F8> :w<CR>:!clear && php %<CR>
au BufEnter,BufNew *.py map <F8> :w<CR>:!clear && python %<CR>
au BufEnter,BufNew *.rb map <F8> :w<CR>:!clear && ruby %<CR>
au BufEnter,BufNew *.io map <F8> :w<CR>:!clear && io %<CR>
au BufEnter,BufNew *.sh map <F8> :w<CR>:!clear && bash %<CR>

" jump back one word
map <F9> b

" jump forward one wordd
map <F10> w

" jump to the beginning of the line
map <F11> 0

" jump to the end of the line
map <F12> $


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Syntastic                                                                   "
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
"let g:syntastic_check_on_open=1
"let g:syntastic_auto_loc_list=1
let g:syntastic_loc_list_height=5
let g:syntastic_error_symbol='✗'
let g:syntastic_warning_symbol='⚠'

" set the checkers
let g:syntastic_python_checkers=['pylint']

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Indentation and spacing                                                     "
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" smartindent inserts one extra level of indentation when appropriate
set smartindent

" autoindent copies the indentation from the previous line,
set autoindent

" tabstop changes the width of the tab character
set tabstop=4
au BufEnter,BufNew *.rb set tabstop=2

" expandtab inserts spaces whenever the tab key is pressed
set expandtab

" shiftwidth changes the number of space characters inserted for indentation
set shiftwidth=4
au BufEnter,BufNew *.rb set shiftwidth=2

" softtabstop makes the backspace key treat the four spaces like a tab
set softtabstop=4
au BufEnter,BufNew *.rb set softtabstop=2

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Keeping it clean                                                            "
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let createVimTmp=1
let vim_tmp=expand('~/.vim/tmp')
if !isdirectory(vim_tmp)
    echo "Creating ~/.vim/tmp"
    echo ""
    silent !mkdir -p ~/.vim/tmp
    let createVimTmp=0
endif

" Don't drop swap and undo files all over the place
set directory=~/.vim/tmp
set undodir=~/.vim/tmp

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Gist                                                                        "
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" GitHub enterprise swag
let g:github_api_url = 'https://github.etsycorp.com/api/v3'

" Allow private gists to show in gist list
let g:gist_show_privates = 1

" Post a private gist
map gpp :Gist -p<CR>

" Post whole file to gist
map gp :Gist<CR>

" List gists
map gl :Gist -l<CR>
